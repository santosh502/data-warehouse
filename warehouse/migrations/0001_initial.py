# Generated by Django 5.2.1 on 2025-05-29 19:33

import django.contrib.postgres.indexes
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('schema_definition', models.JSONField(help_text='JSON schema definition')),
                ('version', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'data_schema',
                'indexes': [models.Index(fields=['name', 'version'], name='data_schema_name_f71bcc_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data', models.JSONField(help_text='Structured data conforming to schema')),
                ('source_file', models.CharField(blank=True, max_length=255, null=True)),
                ('source_line', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='warehouse.dataschema')),
            ],
            options={
                'db_table': 'data_record',
            },
        ),
        migrations.CreateModel(
            name='DataIngestionJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('total_records', models.IntegerField(default=0)),
                ('processed_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('schema', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.dataschema')),
            ],
            options={
                'db_table': 'data_ingestion_job',
            },
        ),
        migrations.CreateModel(
            name='QueryLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query_type', models.CharField(max_length=50)),
                ('query_params', models.JSONField(default=dict)),
                ('execution_time', models.FloatField(help_text='Execution time in seconds')),
                ('result_count', models.IntegerField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'query_log',
            },
        ),
        migrations.CreateModel(
            name='UnstructuredData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField(help_text='Unstructured content')),
                ('data_type', models.CharField(choices=[('TEXT', 'Free-form Text'), ('JSON', 'Semi-structured JSON'), ('XML', 'XML Document'), ('MIXED', 'Mixed Content')], default='TEXT', max_length=10)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization')),
                ('source_file', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('related_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.datarecord')),
            ],
            options={
                'db_table': 'unstructured_data',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Ms', 'Ms'), ('Dr', 'Dr'), ('Prof', 'Prof'), ('Other', 'Other')], max_length=10)),
                ('title_other', models.CharField(blank=True, max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_profile',
                'indexes': [models.Index(fields=['last_name', 'first_name'], name='user_profil_last_na_4422c9_idx'), models.Index(fields=['age'], name='user_profil_age_021b83_idx')],
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('SALARY', 'Salary Income'), ('RENTAL', 'Rental Income'), ('PENSION', 'Pension'), ('INVESTMENT', 'Investment Income'), ('OTHER', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('frequency', models.CharField(choices=[('MONTHLY', 'Per Month'), ('WEEKLY', 'Per Week'), ('ANNUALLY', 'Per Year'), ('QUARTERLY', 'Per Quarter')], max_length=20)),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to='warehouse.userprofile')),
            ],
            options={
                'db_table': 'income',
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('aim', models.TextField(help_text='Unstructured long text in natural language')),
                ('target_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='warehouse.userprofile')),
            ],
            options={
                'db_table': 'goal',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('line1', models.CharField(max_length=255)),
                ('line2', models.CharField(blank=True, max_length=255)),
                ('line3', models.CharField(blank=True, max_length=255)),
                ('line4', models.CharField(blank=True, max_length=255)),
                ('city_town', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postcode', models.CharField(max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='warehouse.userprofile')),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='DataRecordHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('record_id', models.UUIDField(db_index=True)),
                ('operation', models.CharField(choices=[('INSERT', 'Insert'), ('UPDATE', 'Update'), ('DELETE', 'Delete')], max_length=10)),
                ('old_data', models.JSONField(blank=True, help_text='Previous data state', null=True)),
                ('new_data', models.JSONField(blank=True, help_text='New data state', null=True)),
                ('changed_fields', models.JSONField(blank=True, help_text='List of changed field names', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.dataschema')),
            ],
            options={
                'db_table': 'data_record_history',
                'indexes': [models.Index(fields=['record_id', 'timestamp'], name='data_record_record__e128ef_idx'), models.Index(fields=['schema', 'timestamp'], name='data_record_schema__3e7803_idx'), models.Index(fields=['operation', 'timestamp'], name='data_record_operati_f6af64_idx'), models.Index(fields=['timestamp'], name='data_record_timesta_c17aac_idx'), django.contrib.postgres.indexes.GinIndex(fields=['old_data'], name='data_record_old_dat_90766c_gin'), django.contrib.postgres.indexes.GinIndex(fields=['new_data'], name='data_record_new_dat_940038_gin')],
            },
        ),
        migrations.AddIndex(
            model_name='datarecord',
            index=django.contrib.postgres.indexes.GinIndex(fields=['data'], name='data_record_data_76b1dd_gin'),
        ),
        migrations.AddIndex(
            model_name='datarecord',
            index=models.Index(fields=['schema', 'created_at'], name='data_record_schema__7f4390_idx'),
        ),
        migrations.AddIndex(
            model_name='datarecord',
            index=models.Index(fields=['created_at'], name='data_record_created_4915e2_idx'),
        ),
        migrations.AddIndex(
            model_name='datarecord',
            index=models.Index(fields=['is_active'], name='data_record_is_acti_8b0aca_idx'),
        ),
        migrations.AddIndex(
            model_name='dataingestionjob',
            index=models.Index(fields=['status', 'started_at'], name='data_ingest_status_117aaa_idx'),
        ),
        migrations.AddIndex(
            model_name='dataingestionjob',
            index=models.Index(fields=['created_by', 'started_at'], name='data_ingest_created_5cc00d_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['query_type', 'timestamp'], name='query_log_query_t_aa09d4_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['user', 'timestamp'], name='query_log_user_id_94cf7e_idx'),
        ),
        migrations.AddIndex(
            model_name='querylog',
            index=models.Index(fields=['timestamp'], name='query_log_timesta_017df8_idx'),
        ),
        migrations.AddIndex(
            model_name='unstructureddata',
            index=django.contrib.postgres.indexes.GinIndex(fields=['content'], name='unstructured_content_gin_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddIndex(
            model_name='unstructureddata',
            index=django.contrib.postgres.indexes.GinIndex(fields=['metadata'], name='unstructured_metadata_gin_idx'),
        ),
        migrations.AddIndex(
            model_name='unstructureddata',
            index=django.contrib.postgres.indexes.GinIndex(fields=['tags'], name='unstructured_tags_gin_idx'),
        ),
        migrations.AddIndex(
            model_name='unstructureddata',
            index=models.Index(fields=['data_type', 'created_at'], name='unstructure_data_ty_9a29df_idx'),
        ),
        migrations.AddIndex(
            model_name='unstructureddata',
            index=models.Index(fields=['created_at'], name='unstructure_created_a7fcb1_idx'),
        ),
        migrations.AddIndex(
            model_name='income',
            index=models.Index(fields=['category'], name='income_categor_3fa941_idx'),
        ),
        migrations.AddIndex(
            model_name='income',
            index=models.Index(fields=['frequency'], name='income_frequen_b274d6_idx'),
        ),
        migrations.AddIndex(
            model_name='goal',
            index=django.contrib.postgres.indexes.GinIndex(fields=['aim'], name='goal_aim_gin_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddIndex(
            model_name='goal',
            index=models.Index(fields=['target_date'], name='goal_target__8f4d66_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['postcode'], name='address_postcod_4b91b2_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['city_town'], name='address_city_to_0946f1_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['country'], name='address_country_dd48a9_idx'),
        ),
    ]
